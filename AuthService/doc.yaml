openapi: 3.0.0
info:
  title: User Tracker API
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /register:
    post:
      summary: Register new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  format: username
                password:
                  type: string
                  format: password
                first_name:
                  type: string
                  format: first_name
                last_name:
                  type: string
                  format: last_name
                birthdate:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                  format: phone_number
      responses:
        '200':
          description: User registered successfully
  /update/:
    put:
      summary: Update user data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  format: first_name
                last_name:
                  type: string
                  format: last_name
                birthdate:
                  type: string
                  format: date
                email:
                  type: string
                  format: email
                phone_number:
                  type: string
                  format: phone_number
      responses:
        '200':
          description: User updated successfully
  /login:
    post:
      summary: Login user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  format: username
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
  /logout:
    post:
      summary: Logout user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  format: token
      responses:
        '200':
          description: Logout successful
  /create_task:
    post:
      summary: Create a new task
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Task created successfully
    /tasks/{task_id}:
      put:
        summary: Update an existing task
        parameters:
          - in: path
            name: task_id
            schema:
              type: integer
            required: true
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  completed:
                    type: boolean
        responses:
          '200':
            description: Task updated successfully
      delete:
        summary: Delete a task
        parameters:
          - in: path
            name: task_id
            schema:
              type: integer
            required: true
        responses:
          '200':
            description: Task deleted successfully
      get:
        summary: Get a task by ID
        parameters:
          - in: path
            name: task_id
            schema:
              type: integer
            required: true
        responses:
          '200':
            description: Task retrieved successfully
    /tasks:
      get:
        summary: List tasks with pagination
        parameters:
          - in: query
            name: page
            schema:
              type: integer
          - in: query
            name: per_page
            schema:
              type: integer
        responses:
          '200':
            description: Tasks retrieved successfully
